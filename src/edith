#!/bin/bash

# EDITH - Even Dead, I'm The Host
# A host-based intrusion detection system (HIDS)
# Author : srsu10d


VERSION="1.0.0"
CONFIG_FILE="/etc/edith/edith.conf"




show_help() {
    cat << EOF
EDITH v$VERSION - Even Dead, I'm The Host
A lightweight host-based intrusion detection system (HIDS).

Usage: edith [OPTION] | [COMMAND]

Commands:
  start         Start the EDITH daemon.
  stop          Stop the running EDITH daemon.
  status        Check if the EDITH daemon is running.
  restart       Restart the EDITH daemon.
  reload        Reload the configuration file (SIGHUP).
  test-config   Validate the configuration file syntax.

Options:
  -h, --help     Display this help message and exit.
  -v, --version  Display version information and exit.
  -c, --config FILE  Specify an alternative configuration file.

Modules:
  The tool is modular. Current supported modules:
  - ssh: Analyzes SSH authentication logs for brute-force attacks and suspicious logins.

Configuration:
  The main configuration file is located at: $CONFIG_FILE
  Module configurations are defined within the main config file.

Examples:
  edith start
  edith --config /home/user/custom.conf start
  edith status
  edith stop

EOF
}



usage() {
    echo "Usage: edith {start|stop|status|restart|reload|test-config|--help|--version}"
    echo "Try 'edith --help' for more information."
}









case "$1" in
  -h|--help)
    show_help
    exit 0
    ;;
  -v|--version)
    echo "EDITH v$VERSION"
    exit 0
    ;;
  -c|--config)
    # Check if a config file was provided
    if [ -n "$2" ]; then
        CONFIG_FILE="$2"
        shift # shift past the config file argument
    else
        echo "Error: --config requires a file argument." >&2
        usage
        exit 1
    fi
    ;;
esac







# Check if config file exists before loading
if [ ! -f "$CONFIG_FILE" ]; then
    echo "Error: Configuration file $CONFIG_FILE not found!" >&2
    echo "Please create it or specify a different path with --config." >&2
    exit 1
fi

# Load configuration
source "$CONFIG_FILE" || { echo "Error: Failed to load config file '$CONFIG_FILE'."; exit 1; }








# Daemon control functions
case "${1}" in
  start)
    echo "Starting EDITH daemon..."
    # Check if already running
    if [ -f "$PID_FILE" ] && ps -p $(cat "$PID_FILE") > /dev/null; then
        echo "Error: EDITH is already running (PID: $(cat $PID_FILE))." >&2
        exit 1
    fi
    nohup "$0" daemon > "$LOG_FILE" 2>&1 &
    echo $! > "$PID_FILE"
    echo "Started with PID: $!"
    ;;
  stop)
    echo "Stopping EDITH daemon..."
    if [[ -f "$PID_FILE" ]]; then
        PID=$(cat "$PID_FILE")
        if kill -TERM $PID 2>/dev/null; then
            rm -f "$PID_FILE"
            echo "Stopped process $PID."
        else
            echo "Error: Could not stop process $PID. It may already be stopped." >&2
            rm -f "$PID_FILE"
        fi
    else
        echo "Error: PID file $PID_FILE not found. Is the daemon running?" >&2
        exit 1
    fi
    ;;
  status)
    if [[ -f "$PID_FILE" ]]; then
        if ps -p $(cat "$PID_FILE") > /dev/null; then
            echo "EDITH is running (PID: $(cat $PID_FILE))."
            exit 0
        else
            echo "EDITH PID file exists but process is not running."
            rm -f "$PID_FILE" # Clean up stale PID file
            exit 1
        fi
    else
        echo "EDITH is not running."
        exit 3
    fi
    ;;
  restart)
    $0 stop
    sleep 2
    $0 start
    ;;
  reload)
    echo "Reloading configuration (Sending SIGHUP)..."
    if [[ -f "$PID_FILE" ]]; then
        kill -HUP $(cat "$PID_FILE") 2>/dev/null && echo "Reload signal sent." || echo "Error: Failed to send signal." >&2
    else
        echo "Error: PID file not found. Is the daemon running?" >&2
        exit 1
    fi
    ;;
  test-config)
    echo "Testing configuration file: $CONFIG_FILE"
    # Check if file is readable and has valid syntax
    if [ ! -r "$CONFIG_FILE" ]; then
        echo "Error: Cannot read config file." >&2
        exit 1
    fi
    # Test by sourcing it in a sub-shell
    (bash -n "$CONFIG_FILE" && source "$CONFIG_FILE") 2>&1
    if [ $? -eq 0 ]; then
        echo "Configuration syntax is valid."
        exit 0
    else
        echo "Error: Configuration syntax is invalid." >&2
        exit 1
    fi
    ;;
  daemon)
    # Main daemon logic
    trap "rm -f '$PID_FILE'; echo '$(date): EDITH daemon stopped.' >> '$LOG_FILE'; exit 0" SIGTERM SIGINT
    trap "echo '$(date): Configuration reload triggered.' >> '$LOG_FILE'; source '$CONFIG_FILE'" SIGHUP

    echo $$ > "$PID_FILE"
    echo "$(date): EDITH daemon started (PID: $$)." >> "$LOG_FILE"
    echo "$(date): Monitoring log file: $MONITORED_LOG" >> "$LOG_FILE"

    # Source all modules
    for module in /etc/edith/modules/*.sh; do
        if [ -f "$module" ]; then
            source "$module"
            echo "$(date): Loaded module: $(basename $module .sh)" >> "$LOG_FILE"
        fi
    done

    # Initialize counters
    ssh_fail_count=0

    # Main monitoring loop
    tail -F --pid=$$ "$MONITORED_LOG" | while read line
    do
      # Check for anomalies in the new log line
      check_ssh "$line" &
    done
    ;;
  *)
    # If no valid command or option was provided
    if [ -z "$1" ]; then
        echo "Error: Command required." >&2
    else
        echo "Error: Invalid command or option '$1'." >&2
    fi
    usage
    exit 1
    ;;
esac

exit 0










